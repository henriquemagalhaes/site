module.exports = {

	credentialize: function(config, tenantKey){

		var encodedPolicies
		  , encodedSignature
		  , expiration = Date.create().addHours(7).format(Date.ISO8601_DATETIME)
		  , shortExpiration = expiration.substr(0,19)+'Z'
		  , s3Data = {
				awsKey           : config.s3.awsKey,
				bucketURL        : config.s3.bucketURL,
				fileURL			 : config.s3.fileURL,
				accessType       : config.s3.accessType,
				callback         : config.s3.callback.replace('{{tenant}}', tenantKey),
				expiration		 : shortExpiration

			},
			policy = {
				expiration: shortExpiration,
				conditions: [
					{bucket: config.s3.bucket}, 
					['starts-with', '$key', 'files/'],
					{acl: config.s3.accessType}
				]
			}

		function encodePolicy(policy){
			var strPolicies = JSON.stringify(policy)
			return strPolicies.encodeBase64()
		}

		function encodeSignature(encodedPolicy, key){
			var crypto = require('crypto')
			return crypto.createHmac('sha1', key).update(encodedPolicy).digest('base64')
		}

		s3Data.encodedPolicy = encodePolicy( policy )
		s3Data.encodedSignature = encodeSignature( s3Data.encodedPolicy, config.s3.aws__SECRET__key )

		return s3Data

	}

}