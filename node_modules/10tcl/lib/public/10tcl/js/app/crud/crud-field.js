$(document).ready(function(){
	$.model.fieldsets.each(function( fieldset ){
		fieldset.fields.each(function( field ){
			
			field.merge({
				fieldset: fieldset
			})

			if ( field.type === 'password' ){
			
				field.merge({
					writeToForm: function(){},
					clearForm: function(){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( '' )
					}
				})
				$('[data-fieldset={1}][name={2}]'.assign( fieldset.name, field.name )).change( fieldset.onFieldChange )

			} else if ( field.type === 'image' ){
			
				field.merge({
					writeToForm: function( value ){
						$('#{1}-img'.assign( this.name )).attr( 'src', value )
						$('#{1}-img'.assign( this.name )).show()
						$('#{1}-img-icon'.assign(field.name)).hide()
					},
					clearForm: function(){
						$('#{1}-img'.assign( this.name )).removeAttr( 'src' )
						$('#{1}-img'.assign( this.name )).hide()
						$('#{1}-img-icon'.assign(field.name)).show()
					}
				})
				$('#{1}-img'.assign( this.name )).load( fieldset.onFieldChange )

			} else if (field.type === 'html' ){

				field.merge({
					writeToForm: function( value ){
						if ( value === undefined ) tinymce.get(this.name+'-html').setContent('')
						else tinymce.get(this.name+'-html').setContent(value)
					},
					clearForm: function(){
						if ( tinymce.get(this.name+'-html') ) tinymce.get(this.name+'-html').setContent('')
					}
				})

			} else if (field.type === 'multiReference' ){

				field.merge({
					writeToForm: function( value ){
						if (value ){

							$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, this.name )).multiSelect('select', value)
						}
					},
					clearForm: function(){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, this.name ))
							.val([])
							.multiSelect('refresh')
					}
				})

				$('[data-fieldset={1}][name={2}]'.assign( fieldset.name, field.name )).change( fieldset.onFieldChange )

			} else if ( field.type === 'tags' ){

				field.merge({
					writeToForm: function( value ){
						$.view[field.name+'RenderTags']( value )
					},
					clearForm: function(){
						$('.selected-tags[name='+field.name+']').html('')
					}
				})

			} else if ( field.type === 'boolean' ){

				field.merge({
					writeToForm: function( value ){
						if ( value ) 
							$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).prop('checked', true)
						else 
							$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).prop('checked', false)
					},
					clearForm: function(){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).prop('checked', false)
					},
					onFieldChange: function(){
						var fsName = $(this).attr('data-fieldset')
						  , name = $(this).attr('name')
						  , value = $(this).is(':checked')
						
						$.model.record[name] = value
					}
				})

				$('[data-fieldset={1}][name={2}]'.assign( fieldset.name, field.name )).change( field.onFieldChange )

			} else if ( field.type === 'date' ) {

				field.merge({
					writeToForm: function( value ){
						if ( value && new Date(value).isValid() )
							$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( new Date(value).format('{dd}/{MM}/{yyyy}') )
					},
					clearForm: function(){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( '' )
					}
				})

				$('[data-fieldset={1}][name={2}]'.assign( fieldset.name, field.name )).change( fieldset.onFieldChange )

			} else if ( field.type === 'category' ) {

				field.merge({
					writeToForm: function( value ){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( value )
					},
					clearForm: function(){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( '' )
					}
				})

				$(document).on('change', '#select-'+field.name, function(){				
					var fieldsetName = $(this).attr('data-fieldset')
					  , fieldName    = $(this).attr('name')
					  , value        = $(this).val()
					
					if ( value ) $.model.record[fieldName] = value
					else delete $.model.record[fieldName]

					if ( $(this).attr('data-lookup') ) $.model.lookup( $(this).attr('data-lookup') )
				})

			} else {

				field.merge({
					writeToForm: function( value ){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( value )
					},
					clearForm: function(){
						$('[data-fieldset={1}][name={2}]'.assign( this.fieldset.name, field.name )).val( '' )
					}
				})

				$('[data-fieldset={1}][name={2}]'.assign( fieldset.name, field.name )).change( fieldset.onFieldChange )
			}

		})
	})
})