$.model.fieldsets.each(function( fieldset ){

	if ( fieldset.type === 'general' ){

		// write to form
		fieldset.merge({

			writeToForm: function(){
				this.clearForm()
				this.fields.each(function( field ){
					var value = $.model.record[ field.name ]
					field.writeToForm( value )
				})
			},

			onFieldChange: function(){
				var fsName = $(this).attr('data-fieldset')
				  , name = $(this).attr('name')
				  , value = (this.tagName === 'IMG') ? $(this).attr('src') : $(this).val()
				
				if ( value ) $.model.record[name] = value
				else delete $.model.record[name]
			},

			clearForm: function(){
				this.fields.each(function( field ){
					field.clearForm()
				})
			},

			newRecord: function(){
				this.clearForm()
			}

		})

	}

	if ( fieldset.type === 'html' ){

		// write to form
		fieldset.merge({

			writeToForm: function(){
				this.clearForm()
				this.fields.each(function( field ){
					var value = $.model.record[ field.name ]
					field.writeToForm( value )
				})
			},

			clearForm: function(){
				this.fields.each(function( field ){
					field.clearForm()
				})
			},

			newRecord: function(){
				this.clearForm()
			}

		})

	}

	if ( fieldset.type === 'list' ){

		fieldset.merge({

			writeToForm: function(){
				this.renderList()
				this.newListRecord()
			},

			onFieldChange: function(){
				var fsName = $(this).attr('data-fieldset')
				  , name = $(this).attr('name')
				  , value = (this.tagName === 'IMG') ? $(this).attr('src') : $(this).val()
				  , fieldset = $.model.fieldsets.find({fieldsetName: fsName})
				
				fieldset.listRecord[name] = value
			},

			clearForm: function(){
				this.fields.each(function( field ){
					field.clearForm()
				})
				this.listRecord = {} 
				$('[data-fieldset={1}][name=_id]'.assign(this.fieldsetName)).val( '' )
			},

			renderList: function(){
				var name = this.fieldsetName
				  , list = $.model.record[ name ]
				  , templateId = '#{1}-sublist-tpl'.assign( name )
				  , placeId = '#{1}-sublist-place'.assign( name )
				  
				$( templateId ).mu( {list:list} ).stacheOver( placeId )
			},

			editListRecord: function( _id ){
				var record = $.model.record[this.fieldsetName].find({ _id: _id.toNumber() })
				this.listRecord = record
				this.fields.each(function( field ){
					field.writeToForm( record[field.name] )
				})
				$('#{1}-add-to-list'.assign(this.fieldsetName)).hide()
			}, 

			saveListRecord: function(){
				if ( !this.listRecord._id ){
					this.listRecord._id = Math.floor(Math.random() * 10000)
					if (!$.model.record[ this.fieldsetName ]) $.model.record[ this.fieldsetName ] = []
					$.model.record[ this.fieldsetName ].push( this.listRecord )
				} else {
					var record = $.model.record[ this.fieldsetName ].find( { _id: this.listRecord._id })
					record.merge( this.listRecord )
				}
				this.renderList()
			},

			newRecord: function(){
				this.clearForm()
				this.listRecord = {} 
				$('#{1}-sublist-place'.assign(this.fieldsetName)).html('')
			},

			newListRecord: function(){
				this.clearForm()
				this.listRecord = {}
				$('#{1}-add-to-list'.assign(this.fieldsetName)).show()
			}

		})

	}

})